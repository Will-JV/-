#include<stdio.h>
#include<stdlib.h>
#include<math.h>


int main(){									//GAUSS-JACOBI METHOD

int n;
printf("Number of variables: ");			//Inputing matrix order
scanf("%d",&n);
printf("\n");			

double A[n][n],x[n],temp[n],b[n],value,e=0.000001;  //e = (margin of error)
int i,j,repetitions=0,truecounter=0;          //repetitions = (iteration reps)   truecounter = (margin of error counter)

for(i=0;i<n;i++){							//Inputing matrix
	for(j=0;j<n;j++){
		printf("A%d%d:",i+1,j+1);
		scanf("%lf\t",&A[i][j]);
		}
	printf("b%d:",i+1);
	scanf("%lf",&b[i]);	
	}
printf("\n");

for(i=0;i<n;i++){                           //Initializing variable values
    printf("x%d:",i);
    scanf("%lf\t",&x[i]);
}
printf("\n");

while(truecounter!=3){
    truecounter = 0;
    for(i=0;i<n;i++){                       //calculating for Xn ... storing in temp[]
        value = b[i];
        for(j=0;j<n;j++){
            if(i!=j){value -= A[i][j]*x[j];}
        }
        temp[i] = value/A[i][i];
        if(fabs(temp[i]-x[i])/fabs(x[i])<e){truecounter++;}
    }
    for(i=0;i<n;i++){
        x[i]=temp[i];
    }
    repetitions++;
}

for(i=0;i<n;i++){							//Output of solutions
	printf("x%d = %lf\n",i+1,x[i]);	
	}
}


